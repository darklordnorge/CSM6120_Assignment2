.TH "search_Algortihms.AStar" 3 "Sun Nov 30 2014" "Version 1.0" "CSM6120 Assignment" \" -*- nroff -*-
.ad l
.nh
.SH NAME
search_Algortihms.AStar \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAStar\fP ()"
.br
.ti -1c
.RI "void \fBastar\fP (\fBState\fP start, \fBState\fP goal)"
.br
.ti -1c
.RI "void \fBaddNode\fP (\fBTreeNode\fP current, \fBState\fP goal)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A* algorithm class
.PP
\fBAuthor:\fP
.RS 4
Stefan 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "search_Algortihms\&.AStar\&.AStar ()"
A* class constructor 
.SH "Member Function Documentation"
.PP 
.SS "void search_Algortihms\&.AStar\&.addNode (\fBTreeNode\fPcurrent, \fBState\fPgoal)"
Method to add a new node the the search queue\&. This method calculates the Manhattan Distance for every child in the current node and only add them to the search queue if the Manhattan Distance is less than the original calculated one\&.
.PP
\fBParameters:\fP
.RS 4
\fIcurrent\fP The current node 
.br
\fIgoal\fP The goal node, use for the Manhattan Distance calculation 
.RE
.PP

.SS "void search_Algortihms\&.AStar\&.astar (\fBState\fPstart, \fBState\fPgoal)"
A* algorithm
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP The start State 
.br
\fIgoal\fP The goal State 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for CSM6120 Assignment from the source code\&.
